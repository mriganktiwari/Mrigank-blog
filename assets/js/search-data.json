{
  
    
        "post0": {
            "title": "Get good at Git!",
            "content": "Intro . I have been always felt tormented while using Git when working with teams or even alone. This below comic from xkcd aptly summarizes my experience with Git. . . To finally get comfortable, and efficiently use Git, I went through this lecture(link) from Missing semester course. Trying to summarize and demnstrate my learnings. Recommend this video and lecture notes for detailed walkthrough. . Data model . Terminology: . blob - a file (which is a bunch of bytes) is called a blob | tree - a directory is called a tree, it maps names to blobs or treees | commits - snapshots are called commits. | . DAG (directed acyclic graph): . Each snapshot in git refers to a set of ‘parents’ (snapshots that preceded it). | A snapshot might descend from multiple parents (due to merging) | The arrow points to the parent of each commit | Commits are immutable | . Command line . Basics . git help &lt;command&gt;: get help for a git command | git init: creates a new git repo, with data stored in the .git directory | git status: tells you what’s going on | git add &lt;filename&gt;: adds files to staging area | git commit: creates a new commit Write good commit messages! | Even more reasons to write good commit messages! | git commit -a: commits all already tracked files by git without explicitly adding | . | git log: shows a flattened log of history | git log --all --graph --decorate: visualizes history as a DAG | git diff &lt;filename&gt;: show changes you made relative to the staging area | git diff &lt;revision&gt; &lt;filename&gt;: shows differences in a file between snapshots | git checkout &lt;revision&gt;: updates HEAD and current branch move around in your version history | it not just moves you different brach names, but can also move you with hash ids | essentially it moves HEAD around | . | . Branching &amp; Merging . git branch: shows branches | git branch &lt;name&gt;: creates a branch | git checkout -b &lt;name&gt;: creates a branch and switches to it same as git branch &lt;name&gt;; git checkout &lt;name&gt; | . | git merge &lt;revision&gt;: merges into current branch | git mergetool: use a fancy tool to help resolve merge conflicts | git rebase: rebase set of patches onto a new base | . Remotes . git remote: list remotes | git remote add &lt;name&gt; &lt;url&gt;: add a remote | git push &lt;remote&gt; &lt;local branch&gt;:&lt;remote branch&gt;: send objects to remote, and update remote reference | git branch --set-upstream-to=&lt;remote&gt;/&lt;remote branch&gt;: set up correspondence between local and remote branch | git fetch: retrieve objects/references from a remote | git pull: same as git fetch; git merge | git clone: download repository from remote | . Advanced git . git config: Git is highly customizable | git clone --depth=1: shallow clone, without entire version history | git add -p: interactive staging | git rebase -i: interactive rebasing | git blame: show who last edited which line | git stash: temporarily remove modifications to working directory | git bisect: binary search history (e.g. for regressions) | .gitignore: specify intentionally untracked files to ignore | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/git/github/linux/2021/09/18/learning-git.html",
            "relUrl": "/git/github/linux/2021/09/18/learning-git.html",
            "date": " • Sep 18, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Terminal commands",
            "content": "find . man find . Search by Type (file or dir) . find . | Find all the files &amp; directories under current directory | . | find &lt;dir&gt; | Find all the files &amp; directories under | . | find &lt;dir&gt; -type d | Find only directories under specific directory | . | find . -type d | Find only directories under current directory | . | find &lt;dir&gt; -type f | Find only files under specific directory | . | find . -type f | Find only files under current directory | . | . Search by file name . find &lt;dir&gt; -type f -name &quot;&lt;test1.txt&gt;&quot; | Find a file with a specific name | . | find &lt;dir&gt; -type f -name &quot;&lt;test*&gt;&quot; | Find a file starting with the name ‘test’ | . | find &lt;dir&gt; -type f -iname &quot;&lt;test*&gt;&quot; | Find a file starting with the name ‘test’ or ‘Test’ &amp; Case Insensitive | . | find &lt;dir&gt; -type f -iname &quot;&lt;*.py&gt;&quot; | Find a file ending with the name ‘.py’ &amp; Case Insensitive | . | . Search by time / day . find &lt;dir&gt; -type f -mmin -10 | All the files modified in last 10 mins | . | find &lt;dir&gt; -type f -mmin +10 | All the files modified in more than last 10 mins ago | . | find &lt;dir&gt; -type f -mmin +1 -mmin -5 | More than 1 min ago and less than 5 mins ago | . | find &lt;dir&gt; -type f -mtime -20 | Files modified less than 20 days ago | . mmin, mtime | amin, atime | cmin, ctime | . | . Search by file size . find &lt;dir&gt; -size +5M | Find all the files over 5 MB under directory | . M - MB | k - KB | G - GB | . | ls -lah &lt;dir&gt; | List all files and dirs with size in MB | . | find &lt;dir&gt; -empty | Find all empty files in directory | . | . Search based on permissions . find &lt;dir&gt; -perm 777 | . Change user &amp; group for every file &amp; dir under . -exec | Executes the following command on the results from preceding command | . | {} | Placeholder for just the filenamees that would be be used in case of chown command | . | + or ; | Either can be used to end the command | . | find &lt;dir&gt; -exec chown [user]:[group] {} + | . Lets try setting permissions of all directories to 775 and all files to 664 . find &lt;dir&gt; -type d -exec chmod 775 {} + | find &lt;dir&gt; -type f -exec chmod 664 {} + | . Search and perform actions . find &lt;dir&gt; -type f -name &quot;*.jpg&quot; | Search all image files ending in .jpg in and subsequent directories | . | find &lt;dir&gt; -type f -name &quot;*.jpg&quot; -maxdepth 1 | Search all image files ending in .jpg only and only in | . | find &lt;dir&gt; -type f -name &quot;*.jpg&quot; -exec rm {} + | Deletes all the files returned from the command precesing -exec | . | find &lt;dir&gt; -type f -name &quot;*.jpg&quot; -maxdepth 1 -exec rm {} + | Deletes all the files returned from the command precesing -exec | . | . _grep (Global Regular Expression Print) . grep is case sensitive | . Finding is a given text is present in some file . grep &quot;text_to_find&quot; &lt;file_name&gt; | Searching for some text in a normal file | . | grep -w &quot;text_to_find&quot; &lt;file_name&gt; | Return results from file_name only when whole words match text_to_find | . | grep -wi &quot;text_to_find&quot; &lt;file_name&gt; | Returns results with both lower case and upper case with text_to_find | . | . Finding some additional information . Line number of where we found our match . Returns results with line number. grep -win &quot;text_to_find&quot; &lt;file_name&gt; | Returns results with line numbers in file_name | . | grep -win &quot;text_to_find&quot; ./* | Returns results with line numbers in all files in current directory + Will throw error for any subdirectory that might be present. | . | grep -win &quot;text_to_find&quot; ./*.txt | Doesn’t try to search in any subdirectory. | . | grep -winr &quot;text_to_find&quot; . | To search every file and through every subdirectory, a recursive search, might get lot of results. | . | . | Getting some additional context of where this match is found, see a certain number of lines before and after a match. grep -win -B 4 &quot;text_to_find&quot; &lt;file_name&gt; | 4 lines Before all of our match | . | grep -win -A 4 &quot;text_to_find&quot; &lt;file_name&gt; | 4 lines After all of our match | . | grep -win -C 2 &quot;text_to_find&quot; &lt;file_name&gt; | 2 lines Before and After all of our match | . | . | If you’re only interested in file_names with the matches, NOT in the matches themselves. grep -wirl &quot;text_to_find&quot; . | Recursive result of all files with the match | . | grep -wirc &quot;text_to_find&quot; . | Recursive result of all files with the match + Number of matches in each file | . | . | Pipe the output of other commands in to grep to search for something . history | grep &quot;git commit&quot; | history | grep &quot;git commit&quot; | grep &quot;dotfile&quot; | . grep uses Posix regular expressions by default . grep &quot;...-...-....&quot; &lt;filename&gt; | grep &quot; d{3}- d{3}- d{4}&quot; &lt;filename&gt; | This wouldn’t work, because this is pro compatible regular expressions which grep doesn’t use. | . | grep -P &quot; d{3}- d{3}- d{4}&quot; &lt;filename&gt; | This would allow it to work on Linux, NOT on Mac | . | grep -wirlP &quot; d{3}- d{3}- d{4}&quot; &lt;filename&gt; | Return recursive list of list with matching phone numbers | . | grep -V Mac uses BSD grep | Linux uses GNU grep` | . | brew install grep --with-default-names --with-default-names | It will install it as grep, else as ggrep (allowing us to use both BSD and GNU grep) | . | . | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/linux/2020/06/02/Terminal_Find_Grep.html",
            "relUrl": "/linux/2020/06/02/Terminal_Find_Grep.html",
            "date": " • Jun 2, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Mounting a storage device on to a file-system",
            "content": "Issue: . I installed Ubuntu 19.10 to my desktop, which has 2 drives, a 500 GB SSD and a 1TB HDD. | While installing Ubuntu I just chose the 500 GB SSD for Ubuntu, hence when using my computer now I just cannot see the 1TB disk available for use anywhere. | In file explorer, if I look into Properties of the Home directory I see just approximately 500GB. Whereas looking into About of the Settings shows 1.5TB. | . | Groundwork: . I checked file-systems usage with df -h , we see that the below sizes sum up to a ball park of 500GB. | . (base) mrigank@mrigank:/etc$ df -h Filesystem Size Used Avail Use% Mounted on udev 12G 0 12G 0% /dev tmpfs 2.4G 2.0M 2.4G 1% /run /dev/sdb2 457G 62G 373G 15% / tmpfs 12G 457M 12G 4% /dev/shm tmpfs 5.0M 4.0K 5.0M 1% /run/lock tmpfs 12G 0 12G 0% /sys/fs/cgroup /dev/loop3 68M 68M 0 100% /snap/sublime-text/85 /dev/loop2 4.3M 4.3M 0 100% /snap/gnome-calculator/501 /dev/loop4 161M 161M 0 100% /snap/gnome-3-28-1804/116 /dev/loop0 15M 15M 0 100% /snap/gnome-characters/495 /dev/loop5 143M 143M 0 100% /snap/code/31 /dev/loop1 164M 164M 0 100% /snap/spotify/41 /dev/loop6 55M 55M 0 100% /snap/core18/1705 /dev/loop7 150M 150M 0 100% /snap/gnome-3-28-1804/71 /dev/loop8 1.0M 1.0M 0 100% /snap/gnome-logs/93 /dev/loop9 94M 94M 0 100% /snap/core/8935 /dev/loop10 143M 143M 0 100% /snap/slack/23 /dev/loop11 1.0M 1.0M 0 100% /snap/gnome-logs/81 /dev/loop12 15M 15M 0 100% /snap/gnome-characters/317 /dev/loop13 4.4M 4.4M 0 100% /snap/gnome-calculator/704 /dev/loop14 63M 63M 0 100% /snap/gtk-common-themes/1506 /dev/loop15 55M 55M 0 100% /snap/gtk-common-themes/1502 /dev/loop17 94M 94M 0 100% /snap/core/9066 /dev/loop16 143M 143M 0 100% /snap/slack/22 /dev/loop18 55M 55M 0 100% /snap/core18/1668 /dev/loop19 141M 141M 0 100% /snap/code/30 /dev/sdb1 511M 9.1M 502M 2% /boot/efi tmpfs 2.4G 24K 2.4G 1% /run/user/124 tmpfs 2.4G 96K 2.4G 1% /run/user/1000 . As we cannot find where is my 1TB device lost with above command, we use lsblk, and here it is. We see a device named sda of ~1TB space and clearly it should be the one we are looking for. | . (base) mrigank@mrigank:/etc$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT loop0 7:0 0 14.8M 1 loop /snap/gnome-characters/495 loop1 7:1 0 163.7M 1 loop /snap/spotify/41 loop2 7:2 0 4.2M 1 loop /snap/gnome-calculator/501 loop3 7:3 0 67.6M 1 loop /snap/sublime-text/85 loop4 7:4 0 160.2M 1 loop /snap/gnome-3-28-1804/116 loop5 7:5 0 142.9M 1 loop /snap/code/31 loop6 7:6 0 55M 1 loop /snap/core18/1705 loop7 7:7 0 149.9M 1 loop /snap/gnome-3-28-1804/71 loop8 7:8 0 956K 1 loop /snap/gnome-logs/93 loop9 7:9 0 93.8M 1 loop /snap/core/8935 loop10 7:10 0 142.2M 1 loop /snap/slack/23 loop11 7:11 0 956K 1 loop /snap/gnome-logs/81 loop12 7:12 0 14.8M 1 loop /snap/gnome-characters/317 loop13 7:13 0 4.3M 1 loop /snap/gnome-calculator/704 loop14 7:14 0 62.1M 1 loop /snap/gtk-common-themes/1506 loop15 7:15 0 54.8M 1 loop /snap/gtk-common-themes/1502 loop16 7:16 0 142.2M 1 loop /snap/slack/22 loop17 7:17 0 93.9M 1 loop /snap/core/9066 loop18 7:18 0 54.7M 1 loop /snap/core18/1668 loop19 7:19 0 140.2M 1 loop /snap/code/30 sda 8:0 0 931.5G 0 disk sdb 8:16 0 465.8G 0 disk ├─sdb1 8:17 0 512M 0 part /boot/efi └─sdb2 8:18 0 465.3G 0 part / . The command sudo fdisk -l will list the the drives and their partitions for us. Scrolling down we find device named /dev/sda which is of concern right now, whereas for /dev/sdb you see the partitions information available. | We will have to create new partition for /dev/sda | . | . (base) mrigank@mrigank:/$ sudo fdisk -l [sudo] password for mrigank: Disk /dev/sda: 931.53 GiB, 1000204886016 bytes, 1953525168 sectors Disk model: ST1000DM003-1SB1 Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 4096 bytes Disklabel type: gpt Disk identifier: 8BBAFF6A-AC43-4365-9794-F32A35393EA3 Disk /dev/sdb: 465.78 GiB, 500107862016 bytes, 976773168 sectors Disk model: Samsung SSD 850 Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: gpt Disk identifier: C3CADC26-E36E-4796-B118-4288464233B6 Device Start End Sectors Size Type /dev/sdb1 2048 1050623 1048576 512M EFI System /dev/sdb2 1050624 976771071 975720448 465.3G Linux filesystem . | Creating a new partition for /dev/sda . We use fdisk to create partition with this command sudo fdisk /dev/sda | When fdisk prompts for a command, p would print the partition table for out hard drive, which doesn’t exist for /dev/sda right now. | . (base) mrigank@mrigank:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.34). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): p Disk /dev/sda: 931.53 GiB, 1000204886016 bytes, 1953525168 sectors Disk model: ST1000DM003-1SB1 Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 4096 bytes Disklabel type: gpt Disk identifier: 8BBAFF6A-AC43-4365-9794-F32A35393EA3 . For a new partition press n and them p for primary partition. And when asked for partition number press 1 | Press Enter for First sector and Last sector to accept the default value | Although fdisk confirms that it has created a 1TB Linux partition, which is partition number 1, nothing has changed on the hard drive yet. Until you give fdisk the command to write the changes to the drive, the drive is untouched. Once you are certain you’re happy with our choices, press the letter w to write the changes to the drive. And q for quitting the fdisk prompt. | . (base) mrigank@mrigank:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.34). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): n Partition number (1-128, default 1): 1 First sector (34-1953525134, default 2048): Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-1953525134, default 1953525134): Created a new partition 1 of type &#39;Linux filesystem&#39; and of size 931.5 GiB. Partition #1 contains a ntfs signature. Do you want to remove the signature? [Y]es/[N]o: N Command (m for help): w The partition table has been altered. Calling ioctl() to re-read partition table. Syncing disks. . Check is now the fdisk command prints the partition table for /dev/sda | . (base) mrigank@mrigank:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.34). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. Command (m for help): p Disk /dev/sda: 931.53 GiB, 1000204886016 bytes, 1953525168 sectors Disk model: ST1000DM003-1SB1 Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 4096 bytes I/O size (minimum/optimal): 4096 bytes / 4096 bytes Disklabel type: gpt Disk identifier: 8BBAFF6A-AC43-4365-9794-F32A35393EA3 Device Start End Sectors Size Type /dev/sda1 2048 1953525134 1953523087 931.5G Linux filesystem Command (m for help): q . Also we can now see an new partition /dev/sda1 in lsblk | . (base) mrigank@mrigank:~$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT . . . loop20 7:20 0 2.4M 1 loop /snap/gnome-calculator/730 sda 8:0 0 931.5G 0 disk └─sda1 8:1 0 931.5G 0 part sdb 8:16 0 465.8G 0 disk ├─sdb1 8:17 0 512M 0 part /boot/efi └─sdb2 8:18 0 465.3G 0 part / . | Create a file-system on the new Partition . We need to create a file-system on the newly created partition /dev/sda, using command mkfs. | Be careful to write /dev/sda1 in sudo mkfs -t ext4 /dev/sda1 | The file-system created or the drive is of ntfs format, so the below error. We must alter our command accordingly | . (base) mrigank@mrigank:~$ sudo mkfs -t ext4 /dev/sda1 mke2fs 1.45.3 (14-Jul-2019) /dev/sda1 contains a ntfs file system labelled &#39;BULGOGI&#39; Proceed anyway? (y,N) N . Instead if we use sudo mkfs -t ntfs /dev/sda1 | . (base) mrigank@mrigank:~$ sudo mkfs -t ntfs /dev/sda1 Cluster size has been automatically set to 4096 bytes. Initializing device with zeroes: 4% . After 110 minutes later 100% done | . (base) mrigank@mrigank:~$ sudo mkfs -t ntfs /dev/sda1 Cluster size has been automatically set to 4096 bytes. Initializing device with zeroes: 100% - Done. Creating NTFS volume structures. mkntfs completed successfully. Have a nice day. . | . | Mounting the New Drive . We must mount the partition /dev/sda1 on the new drive /dev/sda to a mount point in the file-system. | We’re going to use the mount command to mount the filesystem on the first partition on /dev/sdb, at /mnt . | sudo mount /dev/sda1 /mnt | sudo umount /mnt | Add /mnt as bookmarks in file explorer. | . | | | | | Motivated by. . | . | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/linux/2020/04/25/Mounting-storage-to-file-system.html",
            "relUrl": "/linux/2020/04/25/Mounting-storage-to-file-system.html",
            "date": " • Apr 25, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Run a remote Jupyter lab setup anywhere",
            "content": "## . Here I am assuming the remote server with Deep learning setup on Nvidia GPU is on Ubuntu. | Install Openssh server on Ubuntu machine is not present already. sudo apt-get install openssh-server | Password required of remote machine | . | SSH from your local computer to remote Ubuntu machine ssh remoteuser@remoteIP | . | Setup conda virtual envs in remote system if not already resent as per requirement conda activate &lt;env_name&gt; | . | Fire up a jupyter lab session with below command remoteuser@remotehost: jupyter lab --no-browser --port=XXXX | XXXX - any port in your remote you wish to use, by default its 8888 or 8000 | you would get a link in this form - http://localhost:8888/?token=&lt;token&gt; | . | Forward port XXXX (on remote machine) to YYYY (on local machine) and listen to it. localuser@localhost: ssh -N -f -L localhost:YYYY:localhost:XXXX remoteuser@remotehost | Password required of local machine | In case the YYYY port is busy, run below commands to kill the process lsof -n -i4TCP:YYYY : to get the PID for this port | kill &lt;PID&gt; | . | . | Open the link localhost:YYYY in browser in local machine. | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/setup/deep%20learning/gpu/2020/04/22/Remote-Jupyter-Lab-setup.html",
            "relUrl": "/setup/deep%20learning/gpu/2020/04/22/Remote-Jupyter-Lab-setup.html",
            "date": " • Apr 22, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "Deep Learning rig setup - Ubuntu 19.10 & 20.04",
            "content": "Resources: one and two | . Ubuntu 19.10 installation . Purge Nvidia drivers . sudo apt-get purge nvidia* | sudo lshw -c video | grep &#39;configuration&#39; | sudo apt-get remove --purge nvidia-* | . Disable Nouveau drivers (open source Nvidia GPU drivers) . Insert . blacklist nouveau blacklist lbm-nouveau options nouveau modeset=0 alias nouveau off alias lbm-nouveau off . into the file . /etc/modprobe.d/blacklist.conf . | sudo reboot . | . Find recommended drivers . ubuntu-drivers devices . Download and install the recommended drivers . Download the recommended drivers as per above step from here. . | chmod +x NVIDIA-Linux-x86_64-440.64.run . | sudo ./NVIDIA-Linux-x86_64-440.64.run | nvidia-smi | . Install CUDA as per Nvidia driver version: . Confirm CUDA version from here. | wget http://developer.download.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda_10.1.243_418.87.00_linux.run | chmod +x cuda_10.1.243_418.87.00_linux.run | First way to install - sudo ./cuda_10.1.243_418.87.00_linux.run | Second - sudo apt install nvidia-cuda-toolkit | sudo reboot | nvcc -V, the result should be CUDA version you just installed. | . CuDNN installation . Download appropriate file from here. | tar -zxvf cudnn-10.1-linux-x64-v7.6.5.32.tgz | sudo cp -P cuda/lib64/* /usr/local/cuda-10.1/lib64/ | sudo cp cuda/include/* /usr/local/cuda-10.1/include | sudo chmod a+r /usr/local/cuda-10.1/include/cudnn.h | . Ubuntu customization . Enable Gnome extensions from here. Install Clipboard Indicator | Install “Sound Input &amp; Output Device chooser” | Use dconf-editor sudo apt install dconf-editor | Open dconf-editor | Goto path org/gnome/shell/extensions/dash-to-dock | Customize “click action” to minimize | customize “Running indicaor style” to Dashes. | . | . | . | Customizing Terminal profiles- Gogh terminal - Github Install - bash -c &quot;$(wget -qO- https://git.io/vQgMr)&quot; | It gives choices of 185 color schemes - I only tried 19: Brogrammer as of now. | It’ll create profile for you, restart the terminal and see preferences | . | . | Edit how my bash promt looks like. |",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/2020/03/17/Ubuntu19.10-DL-setup.html",
            "relUrl": "/2020/03/17/Ubuntu19.10-DL-setup.html",
            "date": " • Mar 17, 2020"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "My running journey",
            "content": "Let me admit, today’s date looks great 20-02-2020, although its not Palindrome, which was on 02-02-2020. Amazing isn’t it, two great looking date in same month. . “I have never been a long distance runner, till 30 January 2020”, let me explain the statement. I have spent my school days playing all kind of sports ranging from Cricket, football to volleyball, basketball. So I have an assumption of my physique of someone as athletic. Although never had a very mascular physique like “athletes”. I passed out 12th standard in 2006 and never regularly engaged in sports or physical activities, except once in a while. Untill 2012, when my weight shot up to 80kg which is slight overweight for my height of 5’10”. This was the period when I started working and sunk into a comfortable lifestyle with friends and did not worry about health. . This period of weight gain brought me back to senses that I should do something about it, although all I did was running in teadmill for maximum 2 kilometers daily along with some stretching and abs workouts. Doing this for approximately 2 months I saw drastic weight loss of 7-8 kgs, which again threw me to my confortable zone and the cycle of workouts broke from 6-8 months, leading to weight gain again. Al this cycle continued for 2 more years, where I lost some pounds 3-4 times leading back myself to sedintary lifestyle and gaining back same weight. All this while the maximum I could run was 2 kms with humungous effort, most of which were on treadmills. . I moved up a bit to 3-3.5 kms range last year while working in San Antonio, where I fell in love with trail running (Leon Creek trail). I reached my peak of putting 70 kms in month of May 2019 where most of the runs would touch at least 3 kms. Soon I moved back to India and with hell lot of happening in life I lost that running touch until January 2020. . Although I restarted with my runs in October last year, they were highly sporadic and went a maximum of 2.5 kms. It wasn’t until 30th January, it was surely a magical day in the way I felt. Because I wasn’t thinking a lot about my speed and taking some brisk walk break during the run, there arose the power, will, excitement that I can push myself. I put 5.5 kms on my Strava that day, had run for this distance a couple of times in past, this was the very first time I was feeling comfortable and enjoying a run. This day gave me a unimaginable confidence that I have something and can push my self further. Since this day, I have run for 14 times in February 2020, 90 percent of these runs being 4-5 kms. Today, again I had some magical power and was feeling good enough to extend my long runs record to 10 kms. There was a certain confidence, confort while doing so. . . I know I have talked about this drastic progress in tems of being magical, but as we all know there is no magic, I must admit that most of the credit goes to my improved diet (this is my assumption for now, would update in future as more discoveries arise). Undoubtedly, getting into a diet of greens, fruits, fresh cooked food (entire credit goes to my wife) had transformative change in my runs. My shins feel less breaking, even though I start with tight calves, they soon recover .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/2020/02/20/Running-transformation.html",
            "relUrl": "/2020/02/20/Running-transformation.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post7": {
            "title": "Deep learning resources: Speech",
            "content": "I am currently working on audio/speech processing, TTS etc., so… . Deep Learning in Speech resources: . Understanding sound/audio: @radekosmulski - A great starting point, also usable in Google Colab. | Very good intro to audio. | Progress tracker in NLP by @seb_ruder | Everything you should know about sound | . | Generation/Synthesis of new sounds based on training set (copied from): . Jake Fiala: “Deep Learning and Sound” http://fiala.uk/notes/deep-learning-and-sound-01-intro | GRUV: https://github.com/MattVitelli/GRUV. Btw, found that LSTM worked better than GRU. | John Glover: http://www.johnglover.net/blog/generating-sound-with-rnns.html Glover used LSTM fed by phase vocoder (really just STFT). | Google Magenta for MIDI: https://magenta.tensorflow.org/welcome-to-magenta | Google WaveNet for Audio… https://deepmind.com/blog/wavenet-generative-model-raw-audio/ WaveNet is slow. “Fast Wavenet”: https://github.com/tomlepaine/fast-wavenet | WaveNet in Keras: https://github.com/basveeling/wavenet | . | . | Neural voice cloning with few samples implementations (to be added): Transfer Learning from Speaker Verification to Multispeaker Text-To-Speech Synthesis - paper Github implementation | . | Neural Voice Cloning with a Few Samples - paper Github implementation | . | DeepVoice3 - paper | Wavenet - blog | . | Text-to-speech implementations (to be added): Tacotron2 - paper | DCTTS - paper | . | . Deep Learning cheatsheet by @rusty1s. . Resources by @thom_wolf. . My self-educational approach is usually to get a few rather exhaustive books and read them for cover to cover. . Here is my reading list to join the NLP/AI/ML field. The “Deep Learning” Book by Ian Goodfellow, Yoshua Bengio and Aaron Courville is a good ressource to get a quick overview of the current tools. | “Artificial Intelligence: A Modern Approach” by Stuart Russell and Peter Norvig is a great ressource for all pre-neural-network tools and methods. | “Machine Learning: A Probabilistic Perspective” by Kevin P. Murphy is a great ressource to go deeper in the probabilistic approach and get a good exposure to Bayesian tools. | “Information Theory, Inference and Learning Algorithms” by David MacKay is a little gem that explain propabilities and Information theory so clearly it’s almost unbelievable. | “The Book of Why: The New Science of Cause and Effect” by Pearl, Judea is a good introduction to Causality (more accessible than the big “Causality: Models, Reasoning and Inference”) | “Reinforcement Learning: An Introduction” by Richard S. Sutton and Andrew G. Barto is a great ressource to get an introductory exposure to Reinforcement Learning | . | Natural Language Processing: three great ressources I’ve read with interest: Kyunghyun Cho’s lecture notes on “Natural Language Processing with Representation Learning” are great. | Yoav Goldberg’s book on “Neural Network Methods in Natural Language Processing” is nice too (see also an older free version here). | Jacob Eisenstein’s textbook on “Natural Language Processing” is also a very exhaustive read. | . | It’s also good to complement this with a few online courses depending on what field you feel you should be diving deeper into. I took the following classes: Computational Probability and Inference (6.008.1x) from edx. | Probabilistic Graphical Models Specialization from coursera. | . | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/machine%20learning/2020/02/13/Machine-Learning-Resources.html",
            "relUrl": "/machine%20learning/2020/02/13/Machine-Learning-Resources.html",
            "date": " • Feb 13, 2020"
        }
        
    
  
    
        ,"post8": {
            "title": "My foray to overseas MS",
            "content": "As mush as I cherish getting this opportunity, there have been bitter and sweet memories during these 3 years. A novel though that just flew by at 4:24 AM made me to sit and take some quick notes. . My Nanaji passed away on Nov 10th, 2016 so it’s been 3+ years to that and I understood life doesn’t stop. My mother passed away on June 6th 2019 and it’s been 6 months to that already, again, life doesn’t stop. I pledge to myself today while remembering them both, I will tirelessly work for my development here onwards. . Here are some learnings I had while studying, working in the US and again back to India. . Friendships are hard to come by - In these 3 years I came across many people, only one became long term friend who is to stay. | Regret of not being to spend time with loved ones is killing - I would add it to top in the life goals list. No matter how adventurous things I achieve in life, I’ll regret not fulfilling this one. | I would again love to do it, go out in the unknown territory, explore the world and build a new life - only this time with lot informed decisions. | It’s always worth taking risks, especially the one where you’re uncertain of the end result. There is no fun in embarking of a journey if you’re familiar with its entirety. | In my thoughts I have always been true to myself. But have not done much to work on my shortcomings. I want to do well in Machine Learning field but haven’t been practicing much. I lack heavily on hands on experience, okay, here’s the truth in blunt words. I’ve got my first job in N-Join without much hands on, then got another with Ai Reverie based on recommendation from N-Join (again very less hands on or useful work), the worked for Fractal analytics on completely out of my interest SQL work (although I learned many other things here). Now I am working for Samsung R&amp;D India (supposedly on DL) but again it’s just floating on the water. There is no deep dive, am doing nothing for my development in this perspective. | So I COMMIT today to work hard on this front of my life. Additionally, things I want to explore and excel into are: . Kaggle competitions | Upload my work to Github | Video creation of my work, things I love (maybe Vlog, blog etc.) | Get back to SPORTS, be fully fit throughout 2020 and achieve best physical shape | Read for 30 mins before sleeping. Complete 124 books in 2020. | .",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/lessons/2020/01/29/My_foray.html",
            "relUrl": "/lessons/2020/01/29/My_foray.html",
            "date": " • Jan 29, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://mriganktiwari.github.io/Mrigank-blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://mriganktiwari.github.io/Mrigank-blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://mriganktiwari.github.io/Mrigank-blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}